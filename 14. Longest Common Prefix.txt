class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        int n= strs.size();
        for(int i=0; i<strs.size(); ++i)
        {
            for(int j=0; j<=n; ++j)
            {
                if(strs[j].size()<i || strs[j][i] != strs[0][i])
                {
                    return strs[0].substr(0,i);
                }
            }
        }
        return strs[0];
    }
};






class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        if (strs.empty()) return ""; // Return empty string if strs is empty
        
        for (int i = 0; i < strs[0].size(); ++i) { // Iterate over characters of the first string
            for (int j = 1; j < strs.size(); ++j) { // Iterate over remaining strings
                if (i >= strs[j].size() || strs[j][i] != strs[0][i]) {
                    return strs[0].substr(0, i); // Return common prefix found so far
                }
            }
        }
        
        return strs[0]; // Return the entire first string if it's the only string or the common prefix
    }
};
